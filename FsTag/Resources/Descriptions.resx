<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="TagCommand" xml:space="preserve">
        <value>Adds files to the current session index based on the provided filter.</value>
    </data>
    <data name="PrintCommand" xml:space="preserve">
        <value>Print files that are currently tagged (in the index).</value>
    </data>
    <data name="RecursiveOp" xml:space="preserve">
        <value>Recurse depth to tag up until. 0 (default) denotes no recursion, values less than 0 denote no limit.</value>
    </data>
    <data name="DocsCommand" xml:space="preserve">
        <value>Extended information on various commands and topics in FsTag.</value>
    </data>
    <data name="RemoveAllCommand" xml:space="preserve">
        <value>Untag all indexed files.</value>
    </data>
    <data name="DeleteRecycle" xml:space="preserve">
        <value>Whether to send deleted items to the recycle bin.</value>
    </data>
    <data name="ConfigCommand" xml:space="preserve">
        <value>Access to the global configuration file.</value>
    </data>
    <data name="ConfigSetCommand" xml:space="preserve">
        <value>Set the specified config to the specified Json value.</value>
    </data>
    <data name="BulkCommand" xml:space="preserve">
        <value>Bulk opertions to execute on currently tagged files.</value>
    </data>
    <data name="CleanCommand" xml:space="preserve">
        <value>Cleans the index of any invalid files (i.e, those that do not exist).</value>
    </data>
    <data name="RemoveCommand" xml:space="preserve">
        <value>Removes files from the index based on the provided filter.</value>
    </data>
    <data name="SessionCommand" xml:space="preserve">
        <value>Switch between and view tag sesssions.</value>
    </data>
    <data name="SessionSwitchCommand" xml:space="preserve">
        <value>Switch (and create if necessary) to the specified session.</value>
    </data>
    <data name="SessionRemoveCommand" xml:space="preserve">
        <value>Delete the specified session if it exists.</value>
    </data>
    <data name="BulkDeleteCommand" xml:space="preserve">
        <value>Delete every tagged file.</value>
    </data>
    <data name="QuietOption" xml:space="preserve">
        <value>Suppress all terminal output *including input prompts*.</value>
    </data>
    <data name="DryrunOption" xml:space="preserve">
        <value>For every supported command, avoid permanent changes (such as filesystem edits).</value>
    </data>
    <data name="VerboseOption" xml:space="preserve">
        <value>For every supported command, create detailed output messages.</value>
    </data>
    <data name="FilterOperand" xml:space="preserve">
        <value>The path filter to use. "See fstag print filters" for details.</value>
    </data>
    <data name="SessionSwitchName" xml:space="preserve">
        <value>Name of the session to switch to.</value>
    </data>
    <data name="SessionRemoveName" xml:space="preserve">
        <value>Name of the session to delete.</value>
    </data>
    <data name="PrintKeysOperand" xml:space="preserve">
        <value>List of keys to print sequentially.</value>
    </data>
    <data name="DocsModulesOperand" xml:space="preserve">
        <value>List of documentation modules to output sequentially.</value>
    </data>
    <data name="GetConfigKey" xml:space="preserve">
        <value>Configuration key to print.</value>
    </data>
    <data name="SetConfigKey" xml:space="preserve">
        <value>Configuration key to set.</value>
    </data>
    <data name="SetConfigValue" xml:space="preserve">
        <value>Json value to set to the specified configuration key.</value>
    </data>
</root>